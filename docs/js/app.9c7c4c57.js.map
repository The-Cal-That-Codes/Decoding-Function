{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?4a62","webpack:///./src/rta-message-charset.js","webpack:///./src/App.vue?dae0","webpack:///./src/rta-message-transformer.js","webpack:///src/App.vue","webpack:///./src/App.vue?60d0","webpack:///./src/App.vue?315a","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","service","\"","_vm","this","_h","$createElement","_c","_self","attrs","_v","staticStyle","_l","composition","frame","index","directives","rawName","expression","domProps","on","$event","target","composing","$set","addFrame","removeFrame","staticClass","validate","decode","word","class","_s","array","message","binary","staticRenderFns","RtaMessageCharset","require","default","placeholder","LINE_WIDTH","LINE_HEIGHT","EMPTY_ROW","getChar","letter","size","char","toUpperCase","getLength","chars","lg","md","sm","forEach","width","getSize","msg","getMeta","max_height","height","encode","console","log","split","OUTPUT","offset_top","ii","concat","message_length","offset_left","Math","floor","padding_left","iii","res","padding_top","lh","row","pop","MSG","buffer","step","col","pixelPos","count","frameShape","includes","lineBorders","lineCount","FrameShapeIndex","z","x","lineShapes","h","keys","colShape","letterBorders","u","y","words","letterCode","arrayZZZ","tempArray","q","large","item","outerIndex","innerArray","letterMatch","wordArray","JSON","stringify","toString","DecodedArray","e","join","methods","frames","image","color","line1","line2","line3","duration","messages","raw","decoded","component","Vue","config","productionTip","render","App","$mount"],"mappings":"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","file":"js/app.9c7c4c57.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","const service = {\n    \"placeholder\": {\n        \"lg\": {\n            \"data\": [\n                [1, 0, 1, 0, 1],\n                [0, 1, 0, 1, 0],\n                [1, 0, 1, 0, 1],\n                [0, 1, 0, 1, 0],\n                [1, 0, 1, 0, 1],\n                [0, 1, 0, 1, 0],\n                [1, 0, 1, 0, 1],\n                [0, 1, 0, 1, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [1, 0, 1, 0],\n                [0, 1, 0, 1],\n                [1, 0, 1, 0],\n                [0, 1, 0, 1],\n                [1, 0, 1, 0],\n                [0, 1, 0, 1],\n                [1, 0, 1, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [1, 0, 1],\n                [0, 1, 0],\n                [1, 0, 1],\n                [0, 1, 0],\n                [1, 0, 1],\n                [0, 1, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \" \": {\n        \"lg\": {\n            \"data\": [\n                [0, 0, 0, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 0, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 0, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \"0\": {\n        \"lg\": {\n            \"data\": [\n                [0, 1, 1, 0, 0],\n                [1, 0, 0, 1, 0],\n                [1, 0, 0, 1, 0],\n                [1, 0, 0, 1, 0],\n                [1, 0, 0, 1, 0],\n                [1, 0, 0, 1, 0],\n                [0, 1, 1, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 1, 1, 0],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [0, 1, 1, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 1, 0],\n                [1, 0, 1],\n                [1, 0, 1],\n                [1, 0, 1],\n                [1, 0, 1],\n                [0, 1, 0]\n            ],\n            \"width\": 3\n        }\n    },\n\n    \"1\": {\n        \"lg\": {\n            \"data\": [\n                [0, 0, 1, 0, 0],\n                [0, 1, 1, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 1, 1, 1, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 0, 1, 0],\n                [0, 1, 1, 0],\n                [0, 0, 1, 0],\n                [0, 0, 1, 0],\n                [0, 0, 1, 0],\n                [0, 0, 1, 0],\n                [0, 1, 1, 1]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 1, 0],\n                [1, 1, 0],\n                [0, 1, 0],\n                [0, 1, 0],\n                [0, 1, 0],\n                [1, 1, 1]\n            ],\n            \"width\": 3\n        }\n    },\n\n    \"2\": {\n        \"lg\": {\n            \"data\": [\n                [0, 1, 1, 1, 0],\n                [1, 0, 0, 0, 1],\n                [0, 0, 0, 0, 1],\n                [0, 0, 0, 1, 0],\n                [0, 0, 1, 0, 0],\n                [0, 1, 0, 0, 0],\n                [1, 1, 1, 1, 1]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 1, 1, 0],\n                [1, 0, 0, 1],\n                [0, 0, 0, 1],\n                [0, 0, 0, 1],\n                [0, 0, 1, 0],\n                [0, 1, 0, 0],\n                [1, 1, 1, 1]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 1, 0],\n                [1, 0, 1],\n                [0, 0, 1],\n                [0, 1, 0],\n                [1, 0, 0],\n                [1, 1, 1]\n            ],\n            \"width\": 3\n        }\n    },\n\n    \"3\": {\n        \"lg\": {\n            \"data\": [\n                [0, 1, 1, 1, 0],\n                [1, 0, 0, 0, 1],\n                [0, 0, 0, 0, 1],\n                [0, 0, 1, 1, 0],\n                [0, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [0, 1, 1, 1, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 1, 1, 0],\n                [1, 0, 0, 1],\n                [0, 0, 0, 1],\n                [0, 0, 1, 0],\n                [0, 0, 0, 1],\n                [1, 0, 0, 1],\n                [0, 1, 1, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [1, 1, 0],\n                [0, 0, 1],\n                [1, 1, 0],\n                [0, 0, 1],\n                [0, 0, 1],\n                [1, 1, 0]\n            ],\n            \"width\": 3\n        }\n    },\n\n    \"4\": {\n        \"lg\": {\n            \"data\": [\n                [0, 0, 0, 1, 0],\n                [0, 0, 1, 1, 0],\n                [0, 1, 0, 1, 0],\n                [1, 0, 0, 1, 0],\n                [1, 1, 1, 1, 1],\n                [0, 0, 0, 1, 0],\n                [0, 0, 0, 1, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 0, 1, 0],\n                [0, 1, 1, 0],\n                [1, 0, 1, 0],\n                [1, 0, 1, 0],\n                [1, 1, 1, 1],\n                [0, 0, 1, 0],\n                [0, 0, 1, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 0, 1],\n                [0, 1, 1],\n                [1, 0, 1],\n                [1, 1, 1],\n                [0, 0, 1],\n                [0, 0, 1]\n            ],\n            \"width\": 3\n        }\n    },\n\n    \"5\": {\n        \"lg\": {\n            \"data\": [\n                [1, 1, 1, 1, 1],\n                [1, 0, 0, 0, 0],\n                [1, 1, 1, 1, 0],\n                [0, 0, 0, 0, 1],\n                [0, 0, 0, 0, 1],\n                [0, 0, 0, 0, 1],\n                [1, 1, 1, 1, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [1, 1, 1, 1],\n                [1, 0, 0, 0],\n                [1, 1, 1, 0],\n                [0, 0, 0, 1],\n                [0, 0, 0, 1],\n                [0, 0, 0, 1],\n                [1, 1, 1, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [1, 1, 1],\n                [1, 0, 0],\n                [1, 1, 0],\n                [0, 0, 1],\n                [0, 0, 1],\n                [1, 1, 0]\n            ],\n            \"width\": 3\n        }\n    },\n\n    \"6\": {\n        \"lg\": {\n            \"data\": [\n                [0, 0, 1, 1, 0],\n                [0, 1, 0, 0, 0],\n                [1, 0, 0, 0, 0],\n                [1, 1, 1, 1, 0],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [0, 1, 1, 1, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 0, 1, 0],\n                [0, 1, 0, 0],\n                [1, 0, 0, 0],\n                [1, 1, 1, 0],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [0, 1, 1, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 1, 1],\n                [1, 0, 0],\n                [1, 1, 0],\n                [1, 0, 1],\n                [1, 0, 1],\n                [0, 1, 0]\n            ],\n            \"width\": 3\n        }\n    },\n\n    \"7\": {\n        \"lg\": {\n            \"data\": [\n                [1, 1, 1, 1, 1],\n                [0, 0, 0, 0, 1],\n                [0, 0, 0, 1, 0],\n                [0, 0, 1, 0, 0],\n                [0, 1, 0, 0, 0],\n                [0, 1, 0, 0, 0],\n                [0, 1, 0, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [1, 1, 1, 1],\n                [0, 0, 0, 1],\n                [0, 0, 1, 0],\n                [0, 1, 0, 0],\n                [0, 1, 0, 0],\n                [0, 1, 0, 0],\n                [0, 1, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [1, 1, 1],\n                [0, 0, 1],\n                [0, 0, 1],\n                [0, 1, 0],\n                [1, 0, 0],\n                [1, 0, 0]\n            ],\n            \"width\": 3\n        }\n    },\n\n    \"8\": {\n        \"lg\": {\n            \"data\": [\n                [0, 1, 1, 1, 0],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [0, 1, 1, 1, 0],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [0, 1, 1, 1, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 1, 1, 0],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [0, 1, 1, 0],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [0, 1, 1, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 1, 0],\n                [1, 0, 1],\n                [0, 1, 0],\n                [1, 0, 1],\n                [1, 0, 1],\n                [0, 1, 0]\n            ],\n            \"width\": 3\n        }\n    },\n\n    \"9\": {\n        \"lg\": {\n            \"data\": [\n                [0, 1, 1, 1, 0],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [0, 1, 1, 1, 1],\n                [0, 0, 0, 0, 1],\n                [0, 0, 0, 1, 0],\n                [0, 1, 1, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 1, 1, 0],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [0, 1, 1, 1],\n                [0, 0, 0, 1],\n                [0, 0, 0, 1],\n                [0, 1, 1, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 1, 0],\n                [1, 0, 1],\n                [0, 1, 1],\n                [0, 0, 1],\n                [0, 0, 1],\n                [0, 1, 0]\n            ],\n            \"width\": 3\n        }\n    },\n\n    \"A\": {\n        \"lg\": {\n            \"data\": [\n                [0, 1, 1, 1, 0],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [1, 1, 1, 1, 1],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 1, 1, 0],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 1, 1, 1],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 1, 0],\n                [1, 0, 1],\n                [1, 0, 1],\n                [1, 1, 1],\n                [1, 0, 1],\n                [1, 0, 1]\n            ],\n            \"width\": 3\n        }\n    },\n    \"B\": {\n        \"lg\": {\n            \"data\": [\n                [1, 1, 1, 1, 0],\n                [0, 1, 0, 0, 1],\n                [0, 1, 0, 0, 1],\n                [0, 1, 1, 1, 0],\n                [0, 1, 0, 0, 1],\n                [0, 1, 0, 0, 1],\n                [1, 1, 1, 1, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [1, 1, 1, 0],\n                [0, 1, 0, 1],\n                [0, 1, 0, 1],\n                [0, 1, 1, 0],\n                [0, 1, 0, 1],\n                [0, 1, 0, 1],\n                [1, 1, 1, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [1, 1, 0],\n                [1, 0, 1],\n                [1, 1, 0],\n                [1, 0, 1],\n                [1, 0, 1],\n                [1, 1, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \"C\": {\n        \"lg\": {\n            \"data\": [\n                [0, 1, 1, 1, 0],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 0],\n                [1, 0, 0, 0, 0],\n                [1, 0, 0, 0, 0],\n                [1, 0, 0, 0, 1],\n                [0, 1, 1, 1, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 1, 1, 0],\n                [1, 0, 0, 1],\n                [1, 0, 0, 0],\n                [1, 0, 0, 0],\n                [1, 0, 0, 0],\n                [1, 0, 0, 1],\n                [0, 1, 1, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 1, 0],\n                [1, 0, 1],\n                [1, 0, 0],\n                [1, 0, 0],\n                [1, 0, 1],\n                [0, 1, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \"D\": {\n        \"lg\": {\n            \"data\": [\n                [1, 1, 1, 1, 0],\n                [0, 1, 0, 0, 1],\n                [0, 1, 0, 0, 1],\n                [0, 1, 0, 0, 1],\n                [0, 1, 0, 0, 1],\n                [0, 1, 0, 0, 1],\n                [1, 1, 1, 1, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [1, 1, 1, 0],\n                [0, 1, 0, 1],\n                [0, 1, 0, 1],\n                [0, 1, 0, 1],\n                [0, 1, 0, 1],\n                [0, 1, 0, 1],\n                [1, 1, 1, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [1, 1, 0],\n                [1, 0, 1],\n                [1, 0, 1],\n                [1, 0, 1],\n                [1, 0, 1],\n                [1, 1, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \"E\": {\n        \"lg\": {\n            \"data\": [\n                [1, 1, 1, 1, 1],\n                [1, 0, 0, 0, 0],\n                [1, 0, 0, 0, 0],\n                [1, 1, 1, 0, 0],\n                [1, 0, 0, 0, 0],\n                [1, 0, 0, 0, 0],\n                [1, 1, 1, 1, 1]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [1, 1, 1, 1],\n                [1, 0, 0, 0],\n                [1, 0, 0, 0],\n                [1, 1, 1, 0],\n                [1, 0, 0, 0],\n                [1, 0, 0, 0],\n                [1, 1, 1, 1]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [1, 1, 1],\n                [1, 0, 0],\n                [1, 1, 0],\n                [1, 0, 0],\n                [1, 0, 0],\n                [1, 1, 1]\n            ],\n            \"width\": 3\n        }\n    },\n    \"F\": {\n        \"lg\": {\n            \"data\": [\n                [1, 1, 1, 1, 1],\n                [1, 0, 0, 0, 0],\n                [1, 0, 0, 0, 0],\n                [1, 1, 1, 0, 0],\n                [1, 0, 0, 0, 0],\n                [1, 0, 0, 0, 0],\n                [1, 0, 0, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [1, 1, 1, 1],\n                [1, 0, 0, 0],\n                [1, 0, 0, 0],\n                [1, 1, 1, 0],\n                [1, 0, 0, 0],\n                [1, 0, 0, 0],\n                [1, 0, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [1, 1, 1],\n                [1, 0, 0],\n                [1, 1, 0],\n                [1, 0, 0],\n                [1, 0, 0],\n                [1, 0, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \"G\": {\n        \"lg\": {\n            \"data\": [\n                [0, 1, 1, 1, 1],\n                [1, 0, 0, 0, 0],\n                [1, 0, 0, 0, 0],\n                [1, 0, 0, 0, 0],\n                [1, 0, 0, 1, 1],\n                [1, 0, 0, 0, 1],\n                [0, 1, 1, 1, 1]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 1, 1, 1],\n                [1, 0, 0, 0],\n                [1, 0, 0, 0],\n                [1, 0, 0, 0],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [0, 1, 1, 1]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 1, 1],\n                [1, 0, 0],\n                [1, 0, 0],\n                [1, 1, 1],\n                [1, 0, 1],\n                [0, 1, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \"H\": {\n        \"lg\": {\n            \"data\": [\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [1, 1, 1, 1, 1],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 1, 1, 1],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [1, 0, 1],\n                [1, 0, 1],\n                [1, 1, 1],\n                [1, 0, 1],\n                [1, 0, 1],\n                [1, 0, 1]\n            ],\n            \"width\": 3\n        }\n    },\n    \"I\": {\n        \"lg\": {\n            \"data\": [\n                [0, 1, 1, 1, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 1, 1, 1, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 1, 1, 1],\n                [0, 0, 1, 0],\n                [0, 0, 1, 0],\n                [0, 0, 1, 0],\n                [0, 0, 1, 0],\n                [0, 0, 1, 0],\n                [0, 1, 1, 1]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [1, 1, 1],\n                [0, 1, 0],\n                [0, 1, 0],\n                [0, 1, 0],\n                [0, 1, 0],\n                [1, 1, 1]\n            ],\n            \"width\": 3\n        }\n    },\n    \"J\": {\n        \"lg\": {\n            \"data\": [\n                [0, 0, 0, 0, 1],\n                [0, 0, 0, 0, 1],\n                [0, 0, 0, 0, 1],\n                [0, 0, 0, 0, 1],\n                [0, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [0, 1, 1, 1, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 0, 0, 1],\n                [0, 0, 0, 1],\n                [0, 0, 0, 1],\n                [0, 0, 0, 1],\n                [0, 0, 0, 1],\n                [1, 0, 0, 1],\n                [0, 1, 1, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 0, 1],\n                [0, 0, 1],\n                [0, 0, 1],\n                [0, 0, 1],\n                [1, 0, 1],\n                [0, 1, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \"K\": {\n        \"lg\": {\n            \"data\": [\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 1, 0],\n                [1, 0, 1, 0, 0],\n                [1, 1, 0, 0, 0],\n                [1, 0, 1, 0, 0],\n                [1, 0, 0, 1, 0],\n                [1, 0, 0, 0, 1]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [1, 0, 0, 1],\n                [1, 0, 1, 0],\n                [1, 1, 0, 0],\n                [1, 0, 0, 0],\n                [1, 1, 0, 0],\n                [1, 0, 1, 0],\n                [1, 0, 0, 1]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [1, 0, 1],\n                [1, 0, 1],\n                [1, 1, 0],\n                [1, 0, 1],\n                [1, 0, 1],\n                [1, 0, 1]\n            ],\n            \"width\": 3\n        }\n    },\n    \"L\": {\n        \"lg\": {\n            \"data\": [\n                [1, 0, 0, 0, 0],\n                [1, 0, 0, 0, 0],\n                [1, 0, 0, 0, 0],\n                [1, 0, 0, 0, 0],\n                [1, 0, 0, 0, 0],\n                [1, 0, 0, 0, 0],\n                [1, 1, 1, 1, 1]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [1, 0, 0, 0],\n                [1, 0, 0, 0],\n                [1, 0, 0, 0],\n                [1, 0, 0, 0],\n                [1, 0, 0, 0],\n                [1, 0, 0, 0],\n                [1, 1, 1, 1]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [1, 0, 0],\n                [1, 0, 0],\n                [1, 0, 0],\n                [1, 0, 0],\n                [1, 0, 0],\n                [1, 1, 1]\n            ],\n            \"width\": 3\n        }\n    },\n    \"M\": {\n        \"lg\": {\n            \"data\": [\n                [1, 0, 0, 0, 1],\n                [1, 1, 0, 1, 1],\n                [1, 0, 1, 0, 1],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [1, 0, 0, 1],\n                [1, 1, 1, 1],\n                [1, 1, 1, 1],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [1, 0, 1],\n                [1, 1, 1],\n                [1, 1, 1],\n                [1, 0, 1],\n                [1, 0, 1],\n                [1, 0, 1]\n            ],\n            \"width\": 3\n        }\n    },\n    \"N\": {\n        \"lg\": {\n            \"data\": [\n                [1, 0, 0, 0, 1],\n                [1, 1, 0, 0, 1],\n                [1, 0, 1, 0, 1],\n                [1, 0, 0, 1, 1],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 1, 0, 1],\n                [1, 0, 1, 1],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [1, 0, 1],\n                [1, 0, 1],\n                [1, 1, 1],\n                [1, 1, 1],\n                [1, 0, 1],\n                [1, 0, 1]\n            ],\n            \"width\": 3\n        }\n    },\n    \"O\": {\n        \"lg\": {\n            \"data\": [\n                [0, 1, 1, 1, 0],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [0, 1, 1, 1, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 1, 1, 0],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [0, 1, 1, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 1, 0],\n                [1, 0, 1],\n                [1, 0, 1],\n                [1, 0, 1],\n                [1, 0, 1],\n                [0, 1, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \"P\": {\n        \"lg\": {\n            \"data\": [\n                [1, 1, 1, 1, 0],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [1, 1, 1, 1, 0],\n                [1, 0, 0, 0, 0],\n                [1, 0, 0, 0, 0],\n                [1, 0, 0, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [1, 1, 1, 0],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 1, 1, 0],\n                [1, 0, 0, 0],\n                [1, 0, 0, 0],\n                [1, 0, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [1, 1, 0],\n                [1, 0, 1],\n                [1, 1, 0],\n                [1, 0, 0],\n                [1, 0, 0],\n                [1, 0, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \"Q\": {\n        \"lg\": {\n            \"data\": [\n                [0, 1, 1, 1, 0],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [1, 0, 1, 0, 1],\n                [1, 0, 0, 1, 0],\n                [0, 1, 1, 0, 1]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 1, 1, 0],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 0, 1, 0],\n                [0, 1, 0, 1]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 1, 0],\n                [1, 0, 1],\n                [1, 0, 1],\n                [1, 0, 1],\n                [1, 1, 1],\n                [0, 1, 1]\n            ],\n            \"width\": 3\n        }\n    },\n    \"R\": {\n        \"lg\": {\n            \"data\": [\n                [1, 1, 1, 1, 0],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [1, 1, 1, 1, 0],\n                [1, 0, 1, 0, 0],\n                [1, 0, 0, 1, 0],\n                [1, 0, 0, 0, 1]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [1, 1, 1, 0],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 1, 1, 0],\n                [1, 0, 1, 0],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [1, 1, 0],\n                [1, 0, 1],\n                [1, 1, 0],\n                [1, 1, 0],\n                [1, 0, 1],\n                [1, 0, 1]\n            ],\n            \"width\": 3\n        }\n    },\n    \"S\": {\n        \"lg\": {\n            \"data\": [\n                [0, 1, 1, 1, 0],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 0],\n                [0, 1, 1, 1, 0],\n                [0, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [0, 1, 1, 1, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 1, 1, 0],\n                [1, 0, 0, 1],\n                [1, 0, 0, 0],\n                [0, 1, 1, 0],\n                [0, 0, 0, 1],\n                [1, 0, 0, 1],\n                [0, 1, 1, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 1, 1],\n                [1, 0, 0],\n                [0, 1, 0],\n                [0, 0, 1],\n                [1, 0, 1],\n                [0, 1, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \"T\": {\n        \"lg\": {\n            \"data\": [\n                [1, 1, 1, 1, 1],\n                [0, 0, 1, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 1, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 1, 1, 1],\n                [0, 0, 1, 0],\n                [0, 0, 1, 0],\n                [0, 0, 1, 0],\n                [0, 0, 1, 0],\n                [0, 0, 1, 0],\n                [0, 0, 1, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [1, 1, 1],\n                [0, 1, 0],\n                [0, 1, 0],\n                [0, 1, 0],\n                [0, 1, 0],\n                [0, 1, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \"U\": {\n        \"lg\": {\n            \"data\": [\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [0, 1, 1, 1, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [0, 1, 1, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [1, 0, 1],\n                [1, 0, 1],\n                [1, 0, 1],\n                [1, 0, 1],\n                [1, 0, 1],\n                [0, 1, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \"V\": {\n        \"lg\": {\n            \"data\": [\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [0, 1, 0, 1, 0],\n                [0, 0, 1, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [1, 0, 1, 0],\n                [1, 0, 1, 0],\n                [1, 0, 1, 0],\n                [1, 0, 1, 0],\n                [1, 0, 1, 0],\n                [1, 0, 1, 0],\n                [0, 1, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [1, 0, 1],\n                [1, 0, 1],\n                [1, 0, 1],\n                [1, 0, 1],\n                [0, 1, 0],\n                [0, 1, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \"W\": {\n        \"lg\": {\n            \"data\": [\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [1, 0, 1, 0, 1],\n                [1, 1, 0, 1, 1],\n                [1, 0, 0, 0, 1]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 1, 1, 1],\n                [1, 0, 0, 1]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [1, 0, 1],\n                [1, 0, 1],\n                [1, 0, 1],\n                [1, 1, 1],\n                [1, 1, 1],\n                [1, 0, 1]\n            ],\n            \"width\": 3\n        }\n    },\n    \"X\": {\n        \"lg\": {\n            \"data\": [\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [0, 1, 0, 1, 0],\n                [0, 0, 1, 0, 0],\n                [0, 1, 0, 1, 0],\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [0, 1, 1, 0],\n                [0, 1, 1, 0],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [1, 0, 1],\n                [1, 0, 1],\n                [0, 1, 0],\n                [1, 0, 1],\n                [1, 0, 1],\n                [1, 0, 1]\n            ],\n            \"width\": 3\n        }\n    },\n    \"Y\": {\n        \"lg\": {\n            \"data\": [\n                [1, 0, 0, 0, 1],\n                [1, 0, 0, 0, 1],\n                [0, 1, 0, 1, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 1, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [1, 0, 1, 0],\n                [1, 0, 1, 0],\n                [1, 0, 1, 0],\n                [0, 1, 0, 0],\n                [0, 1, 0, 0],\n                [0, 1, 0, 0],\n                [0, 1, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [1, 0, 1],\n                [1, 0, 1],\n                [0, 1, 0],\n                [0, 1, 0],\n                [0, 1, 0],\n                [0, 1, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \"Z\": {\n        \"lg\": {\n            \"data\": [\n                [1, 1, 1, 1, 1],\n                [0, 0, 0, 0, 1],\n                [0, 0, 0, 1, 0],\n                [0, 0, 1, 0, 0],\n                [0, 1, 0, 0, 0],\n                [1, 0, 0, 0, 0],\n                [1, 1, 1, 1, 1]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [1, 1, 1, 1],\n                [0, 0, 0, 1],\n                [0, 0, 1, 0],\n                [0, 1, 0, 0],\n                [1, 0, 0, 0],\n                [1, 0, 0, 0],\n                [1, 1, 1, 1]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [1, 1, 1],\n                [0, 0, 1],\n                [0, 0, 1],\n                [0, 1, 0],\n                [1, 0, 0],\n                [1, 1, 1]\n            ],\n            \"width\": 3\n        }\n    },\n\n    \"!\": {\n        \"lg\": {\n            \"data\": [\n                [0, 0, 1, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 1, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 1, 0, 0],\n                [0, 1, 0, 0],\n                [0, 1, 0, 0],\n                [0, 1, 0, 0],\n                [0, 1, 0, 0],\n                [0, 0, 0, 0],\n                [0, 1, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 1, 0],\n                [0, 1, 0],\n                [0, 1, 0],\n                [0, 1, 0],\n                [0, 0, 0],\n                [0, 1, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \"\\\"\": {\n        \"lg\": {\n            \"data\": [\n                [0, 1, 0, 1, 0],\n                [0, 1, 0, 1, 0],\n                [0, 1, 0, 1, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [1, 0, 0, 1],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [1, 0, 1],\n                [1, 0, 1],\n                [0, 0, 0],\n                [0, 0, 0],\n                [0, 0, 0],\n                [0, 0, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \"#\": {\n        \"lg\": {\n            \"data\": [\n                [0, 1, 0, 1, 0],\n                [0, 1, 0, 1, 0],\n                [1, 1, 1, 1, 1],\n                [0, 1, 0, 1, 0],\n                [1, 1, 1, 1, 1],\n                [0, 1, 0, 1, 0],\n                [0, 1, 0, 1, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 0, 0, 0],\n                [0, 1, 1, 0],\n                [1, 1, 1, 1],\n                [0, 1, 1, 0],\n                [1, 1, 1, 1],\n                [0, 1, 1, 0],\n                [0, 0, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 0, 0],\n                [0, 1, 0],\n                [1, 1, 1],\n                [0, 1, 0],\n                [1, 1, 1],\n                [0, 1, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \"$\": {\n        \"lg\": {\n            \"data\": [\n                [0, 0, 1, 0, 0],\n                [0, 1, 1, 1, 1],\n                [1, 0, 1, 0, 0],\n                [0, 1, 1, 1, 0],\n                [0, 0, 1, 0, 1],\n                [1, 1, 1, 1, 0],\n                [0, 0, 1, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 1, 0, 0],\n                [0, 1, 1, 0],\n                [1, 1, 0, 0],\n                [0, 1, 0, 0],\n                [0, 1, 1, 0],\n                [1, 1, 0, 0],\n                [0, 1, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 1, 1],\n                [1, 1, 0],\n                [0, 1, 0],\n                [0, 1, 1],\n                [1, 1, 0],\n                [0, 1, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \"%\": {\n        \"lg\": {\n            \"data\": [\n                [1, 1, 0, 0, 0],\n                [1, 1, 0, 0, 1],\n                [0, 0, 0, 1, 0],\n                [0, 0, 1, 0, 0],\n                [0, 1, 0, 0, 0],\n                [1, 0, 0, 1, 1],\n                [0, 0, 0, 1, 1]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 0, 0, 0],\n                [1, 1, 0, 1],\n                [1, 1, 0, 1],\n                [0, 0, 1, 0],\n                [0, 1, 0, 0],\n                [1, 0, 1, 1],\n                [1, 0, 1, 1]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [1, 0, 1],\n                [0, 0, 1],\n                [0, 1, 0],\n                [1, 0, 0],\n                [1, 0, 1],\n                [0, 0, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \"&\": {\n        \"lg\": {\n            \"data\": [\n                [0, 1, 0, 0, 0],\n                [1, 0, 1, 0, 0],\n                [1, 0, 1, 0, 0],\n                [0, 1, 0, 0, 0],\n                [1, 0, 1, 0, 1],\n                [1, 0, 0, 1, 0],\n                [0, 1, 1, 0, 1]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 1, 0, 0],\n                [1, 0, 1, 0],\n                [1, 0, 1, 0],\n                [0, 1, 0, 0],\n                [1, 1, 0, 1],\n                [1, 0, 1, 0],\n                [0, 1, 0, 1]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 1, 0],\n                [1, 0, 1],\n                [0, 1, 0],\n                [1, 1, 1],\n                [1, 0, 1],\n                [0, 1, 1]\n            ],\n            \"width\": 3\n        }\n    },\n    \"'\": {\n        \"lg\": {\n            \"data\": [\n                [0, 0, 0, 1, 0],\n                [0, 0, 0, 1, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 0, 1, 0],\n                [0, 0, 1, 0],\n                [0, 1, 0, 0],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 0, 1],\n                [0, 1, 0],\n                [0, 0, 0],\n                [0, 0, 0],\n                [0, 0, 0],\n                [0, 0, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \"(\": {\n        \"lg\": {\n            \"data\": [\n                [0, 0, 1, 0, 0],\n                [0, 1, 0, 0, 0],\n                [1, 0, 0, 0, 0],\n                [1, 0, 0, 0, 0],\n                [1, 0, 0, 0, 0],\n                [0, 1, 0, 0, 0],\n                [0, 0, 1, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 0, 1, 0],\n                [0, 1, 0, 0],\n                [1, 0, 0, 0],\n                [1, 0, 0, 0],\n                [1, 0, 0, 0],\n                [0, 1, 0, 0],\n                [0, 0, 1, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 0, 1],\n                [0, 1, 0],\n                [1, 0, 0],\n                [1, 0, 0],\n                [0, 1, 0],\n                [0, 0, 1]\n            ],\n            \"width\": 3\n        }\n    },\n    \")\": {\n        \"lg\": {\n            \"data\": [\n                [0, 0, 1, 0, 0],\n                [0, 0, 0, 1, 0],\n                [0, 0, 0, 0, 1],\n                [0, 0, 0, 0, 1],\n                [0, 0, 0, 0, 1],\n                [0, 0, 0, 1, 0],\n                [0, 0, 1, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 1, 0, 0],\n                [0, 0, 1, 0],\n                [0, 0, 0, 1],\n                [0, 0, 0, 1],\n                [0, 0, 0, 1],\n                [0, 0, 1, 0],\n                [0, 1, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [1, 0, 0],\n                [0, 1, 0],\n                [0, 0, 1],\n                [0, 0, 1],\n                [0, 1, 0],\n                [1, 0, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \"*\": {\n        \"lg\": {\n            \"data\": [\n                [0, 0, 1, 0, 0],\n                [1, 0, 1, 0, 1],\n                [0, 1, 1, 1, 0],\n                [1, 1, 1, 1, 1],\n                [0, 1, 1, 1, 0],\n                [1, 0, 1, 0, 1],\n                [0, 0, 1, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 1, 0, 0],\n                [0, 1, 0, 0],\n                [1, 1, 1, 0],\n                [1, 1, 1, 0],\n                [1, 1, 1, 0],\n                [0, 1, 0, 0],\n                [0, 1, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 0, 0],\n                [0, 1, 0],\n                [1, 1, 1],\n                [1, 1, 1],\n                [1, 1, 1],\n                [0, 1, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \"+\": {\n        \"lg\": {\n            \"data\": [\n                [0, 0, 0, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 1, 0, 0],\n                [1, 1, 1, 1, 1],\n                [0, 0, 1, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 0, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [0, 0, 1, 0],\n                [0, 1, 1, 1],\n                [0, 0, 1, 0],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 0, 0],\n                [0, 1, 0],\n                [0, 1, 0],\n                [1, 1, 1],\n                [0, 1, 0],\n                [0, 1, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \",\": {\n        \"lg\": {\n            \"data\": [\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 1, 0, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [0, 0, 1, 0],\n                [0, 0, 1, 0],\n                [0, 1, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 0, 0],\n                [0, 0, 0],\n                [0, 0, 0],\n                [0, 0, 0],\n                [0, 0, 1],\n                [0, 1, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \"-\": {\n        \"lg\": {\n            \"data\": [\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [1, 1, 1, 1, 1],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [1, 1, 1, 1],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 0, 0],\n                [0, 0, 0],\n                [0, 0, 0],\n                [1, 1, 1],\n                [0, 0, 0],\n                [0, 0, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \".\": {\n        \"lg\": {\n            \"data\": [\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 1, 1, 0, 0],\n                [0, 1, 1, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [0, 1, 1, 0],\n                [0, 1, 1, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 0, 0],\n                [0, 0, 0],\n                [0, 0, 0],\n                [0, 0, 0],\n                [0, 1, 1],\n                [0, 1, 1]\n            ],\n            \"width\": 3\n        }\n    },\n    \"/\": {\n        \"lg\": {\n            \"data\": [\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 1],\n                [0, 0, 0, 1, 0],\n                [0, 0, 1, 0, 0],\n                [0, 1, 0, 0, 0],\n                [1, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 0, 0, 0],\n                [0, 0, 0, 1],\n                [0, 0, 0, 1],\n                [0, 0, 1, 0],\n                [0, 1, 0, 0],\n                [1, 0, 0, 0],\n                [1, 0, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 0, 1],\n                [0, 0, 1],\n                [0, 1, 0],\n                [1, 0, 0],\n                [1, 0, 0],\n                [0, 0, 0]\n            ],\n            \"width\": 3\n        }\n    },\n\n\n\n\n\n    \":\": {\n        \"lg\": {\n            \"data\": [\n                [0, 0, 0, 0, 0],\n                [0, 1, 1, 0, 0],\n                [0, 1, 1, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 1, 1, 0, 0],\n                [0, 1, 1, 0, 0],\n                [0, 0, 0, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 0, 0, 0],\n                [0, 1, 1, 0],\n                [0, 1, 1, 0],\n                [0, 0, 0, 0],\n                [0, 1, 1, 0],\n                [0, 1, 1, 0],\n                [0, 0, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 0, 0],\n                [0, 1, 0],\n                [0, 1, 0],\n                [0, 0, 0],\n                [0, 1, 0],\n                [0, 1, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \";\": {\n        \"lg\": {\n            \"data\": [\n                [0, 0, 0, 0, 0],\n                [0, 1, 1, 0, 0],\n                [0, 1, 1, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 1, 0, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 0, 0, 0],\n                [0, 1, 1, 0],\n                [0, 1, 1, 0],\n                [0, 0, 0, 0],\n                [0, 0, 1, 0],\n                [0, 0, 1, 0],\n                [0, 1, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 0, 0],\n                [0, 1, 0],\n                [0, 1, 0],\n                [0, 0, 0],\n                [0, 1, 0],\n                [1, 0, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \"<\": {\n        \"lg\": {\n            \"data\": [\n                [0, 0, 0, 1, 0],\n                [0, 0, 1, 0, 0],\n                [0, 1, 0, 0, 0],\n                [1, 0, 0, 0, 0],\n                [0, 1, 0, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 0, 1, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 0, 0, 1],\n                [0, 0, 1, 0],\n                [0, 1, 0, 0],\n                [1, 0, 0, 0],\n                [0, 1, 0, 0],\n                [0, 0, 1, 0],\n                [0, 0, 0, 1]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 0, 0],\n                [0, 0, 1],\n                [0, 1, 0],\n                [1, 0, 0],\n                [0, 1, 0],\n                [0, 0, 1]\n            ],\n            \"width\": 3\n        }\n    },\n    \"=\": {\n        \"lg\": {\n            \"data\": [\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [1, 1, 1, 1, 1],\n                [0, 0, 0, 0, 0],\n                [1, 1, 1, 1, 1],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [1, 1, 1, 1],\n                [0, 0, 0, 0],\n                [1, 1, 1, 1],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 0, 0],\n                [0, 0, 0],\n                [1, 1, 1],\n                [0, 0, 0],\n                [1, 1, 1],\n                [0, 0, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \">\": {\n        \"lg\": {\n            \"data\": [\n                [0, 1, 0, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 0, 1, 0],\n                [0, 0, 0, 0, 1],\n                [0, 0, 0, 1, 0],\n                [0, 0, 1, 0, 0],\n                [0, 1, 0, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [1, 0, 0, 0],\n                [0, 1, 0, 0],\n                [0, 0, 1, 0],\n                [0, 0, 0, 1],\n                [0, 0, 1, 0],\n                [0, 1, 0, 0],\n                [1, 0, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 0, 0],\n                [1, 0, 0],\n                [0, 1, 0],\n                [0, 0, 1],\n                [0, 1, 0],\n                [1, 0, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \"?\": {\n        \"lg\": {\n            \"data\": [\n                [0, 1, 1, 1, 0],\n                [1, 0, 0, 0, 1],\n                [0, 0, 0, 0, 1],\n                [0, 0, 0, 1, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 1, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 1, 1, 0],\n                [1, 0, 0, 1],\n                [0, 0, 0, 1],\n                [0, 0, 1, 0],\n                [0, 1, 0, 0],\n                [0, 0, 0, 0],\n                [0, 1, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 1, 0],\n                [1, 0, 1],\n                [0, 0, 1],\n                [0, 1, 0],\n                [0, 0, 0],\n                [0, 1, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \"@\": {\n        \"lg\": {\n            \"data\": [\n                [0, 1, 1, 1, 0],\n                [1, 0, 0, 0, 1],\n                [1, 0, 1, 1, 1],\n                [1, 0, 1, 0, 1],\n                [1, 0, 1, 1, 1],\n                [1, 0, 0, 0, 0],\n                [0, 1, 1, 1, 1]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 1, 1, 0],\n                [1, 0, 0, 1],\n                [1, 0, 1, 1],\n                [1, 0, 1, 1],\n                [1, 0, 0, 0],\n                [0, 1, 1, 1],\n                [0, 0, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 1, 0],\n                [1, 0, 1],\n                [1, 1, 1],\n                [1, 1, 1],\n                [1, 0, 0],\n                [0, 1, 1]\n            ],\n            \"width\": 3\n        }\n    },\n    \"[\": {\n        \"lg\": {\n            \"data\": [\n                [1, 1, 1, 0, 0],\n                [1, 0, 0, 0, 0],\n                [1, 0, 0, 0, 0],\n                [1, 0, 0, 0, 0],\n                [1, 0, 0, 0, 0],\n                [1, 0, 0, 0, 0],\n                [1, 1, 1, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [1, 1, 1, 0],\n                [1, 0, 0, 0],\n                [1, 0, 0, 0],\n                [1, 0, 0, 0],\n                [1, 0, 0, 0],\n                [1, 0, 0, 0],\n                [1, 1, 1, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [1, 1, 1],\n                [1, 0, 0],\n                [1, 0, 0],\n                [1, 0, 0],\n                [1, 0, 0],\n                [1, 1, 1]\n            ],\n            \"width\": 3\n        }\n    },\n    \"\\\\\": {\n        \"lg\": {\n            \"data\": [\n                [0, 0, 0, 0, 0],\n                [1, 0, 0, 0, 0],\n                [0, 1, 0, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 0, 1, 0],\n                [0, 0, 0, 0, 1],\n                [0, 0, 0, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [1, 0, 0, 0],\n                [1, 0, 0, 0],\n                [0, 1, 0, 0],\n                [0, 0, 1, 0],\n                [0, 0, 0, 1],\n                [0, 0, 0, 1],\n                [0, 0, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 0, 0],\n                [1, 0, 0],\n                [1, 0, 0],\n                [0, 1, 0],\n                [0, 0, 1],\n                [0, 0, 1]\n            ],\n            \"width\": 3\n        }\n    },\n    \"]\": {\n        \"lg\": {\n            \"data\": [\n                [0, 0, 1, 1, 1],\n                [0, 0, 0, 0, 1],\n                [0, 0, 0, 0, 1],\n                [0, 0, 0, 0, 1],\n                [0, 0, 0, 0, 1],\n                [0, 0, 0, 0, 1],\n                [0, 0, 1, 1, 1]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 1, 1, 1],\n                [0, 0, 0, 1],\n                [0, 0, 0, 1],\n                [0, 0, 0, 1],\n                [0, 0, 0, 1],\n                [0, 0, 0, 1],\n                [0, 1, 1, 1]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [1, 1, 1],\n                [0, 0, 1],\n                [0, 0, 1],\n                [0, 0, 1],\n                [0, 0, 1],\n                [1, 1, 1]\n            ],\n            \"width\": 3\n        }\n    },\n    \"^\": {\n        \"lg\": {\n            \"data\": [\n                [0, 0, 1, 0, 0],\n                [0, 1, 0, 1, 0],\n                [1, 0, 0, 0, 1],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 0, 0, 0],\n                [0, 1, 0, 0],\n                [1, 0, 1, 0],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 1, 0],\n                [1, 0, 1],\n                [0, 0, 0],\n                [0, 0, 0],\n                [0, 0, 0],\n                [0, 0, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \"_\": {\n        \"lg\": {\n            \"data\": [\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [1, 1, 1, 1, 1]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [1, 1, 1, 1]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 0, 0],\n                [0, 0, 0],\n                [0, 0, 0],\n                [0, 0, 0],\n                [0, 0, 0],\n                [1, 1, 1]\n            ],\n            \"width\": 3\n        }\n    },\n\n    \"`\": {\n        \"lg\": {\n            \"data\": [\n                [0, 1, 0, 0, 0],\n                [0, 1, 0, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 1, 0, 0],\n                [0, 1, 0, 0],\n                [0, 0, 1, 0],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [1, 0, 0],\n                [0, 1, 0],\n                [0, 0, 0],\n                [0, 0, 0],\n                [0, 0, 0],\n                [0, 0, 0]\n            ],\n            \"width\": 3\n        }\n    },\n\n    \"{\": {\n        \"lg\": {\n            \"data\": [\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 1],\n                [0, 0, 0, 1, 0],\n                [1, 0, 1, 0, 0],\n                [1, 1, 0, 0, 0],\n                [1, 1, 1, 0, 0],\n                [0, 0, 0, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [0, 0, 0, 1],\n                [1, 0, 1, 0],\n                [1, 1, 0, 0],\n                [1, 1, 1, 0],\n                [0, 0, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 0, 0],\n                [0, 0, 1],\n                [0, 0, 1],\n                [1, 0, 1],\n                [1, 1, 0],\n                [1, 1, 1]\n            ],\n            \"width\": 3\n        }\n    },\n    \"|\": {\n        \"lg\": {\n            \"data\": [\n                [0, 0, 1, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 1, 0, 0],\n                [0, 0, 1, 0, 0],\n                [1, 0, 1, 0, 1],\n                [0, 1, 1, 1, 0],\n                [0, 0, 1, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 1, 0, 0],\n                [0, 1, 0, 0],\n                [0, 1, 0, 0],\n                [0, 1, 0, 0],\n                [1, 1, 1, 0],\n                [1, 1, 1, 0],\n                [0, 1, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 1, 0],\n                [0, 1, 0],\n                [0, 1, 0],\n                [1, 1, 1],\n                [1, 1, 1],\n                [0, 1, 0]\n            ],\n            \"width\": 3\n        }\n    },\n    \"}\": {\n        \"lg\": {\n            \"data\": [\n                [0, 0, 0, 0, 0],\n                [1, 0, 0, 0, 0],\n                [0, 1, 0, 0, 0],\n                [0, 0, 1, 0, 1],\n                [0, 0, 0, 1, 1],\n                [0, 0, 1, 1, 1],\n                [0, 0, 0, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [1, 0, 0, 0],\n                [0, 1, 0, 1],\n                [0, 0, 1, 1],\n                [0, 1, 1, 1],\n                [0, 0, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 0, 0],\n                [1, 0, 0],\n                [1, 0, 0],\n                [1, 0, 1],\n                [0, 1, 1],\n                [1, 1, 1]\n            ],\n            \"width\": 3\n        }\n    },\n\n    \"~\": {\n        \"lg\": {\n            \"data\": [\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0],\n                [0, 1, 0, 0, 0],\n                [1, 0, 1, 0, 1],\n                [0, 0, 0, 1, 0],\n                [0, 0, 0, 0, 0],\n                [0, 0, 0, 0, 0]\n            ],\n            \"width\": 5\n        },\n        \"md\": {\n            \"data\": [\n                [0, 0, 0, 0],\n                [0, 0, 0, 0],\n                [0, 1, 0, 0],\n                [1, 1, 1, 1],\n                [0, 0, 1, 0],\n                [0, 0, 0, 0],\n                [0, 0, 0, 0]\n            ],\n            \"width\": 4\n        },\n        \"sm\": {\n            \"data\": [\n                [0, 1, 0],\n                [1, 0, 1],\n                [0, 1, 0],\n                [0, 0, 0],\n                [0, 0, 0],\n                [0, 0, 0]\n            ],\n            \"width\": 3\n        }\n    }\n};\n\nexport default service;","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('h1',[_vm._v(\"Decoding Function Showcase\")]),_c('h3',{staticStyle:{\"margin-bottom\":\"50px\"}},[_vm._v(\"Type a word in each box, hit validate and then decode to see the output\")]),_vm._l((_vm.composition.frames),function(frame,index){return _c('div',{key:index,staticStyle:{\"margin-bottom\":\"10px\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(frame.line1),expression:\"frame.line1\"}],domProps:{\"value\":(frame.line1)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(frame, \"line1\", $event.target.value)}}}),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(frame.line2),expression:\"frame.line2\"}],domProps:{\"value\":(frame.line2)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(frame, \"line2\", $event.target.value)}}}),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(frame.line3),expression:\"frame.line3\"}],domProps:{\"value\":(frame.line3)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(frame, \"line3\", $event.target.value)}}})])}),_c('button',{staticStyle:{\"margin-top\":\"50px\"},on:{\"click\":function($event){return _vm.addFrame()}}},[_vm._v(\"Add frame\")]),_c('button',{on:{\"click\":function($event){return _vm.removeFrame()}}},[_vm._v(\"Remove frame\")]),_c('button',{staticClass:\"validate\",on:{\"click\":function($event){return _vm.validate()}}},[_vm._v(\"Validate\")]),_c('button',{staticClass:\"decode\",on:{\"click\":function($event){return _vm.decode()}}},[_vm._v(\"Decode\")]),_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"words-container\"},_vm._l((_vm.words),function(word,index){return _c('p',{key:index + 'A',staticClass:\"word\",class:[(index + 1) % 3 == 0 ? 'word-margin' : '']},[_vm._v(\" \"+_vm._s(word)+\" \")])}),0),_c('h3',[_vm._v(\"Arrays that were decoded\")]),_vm._l((_vm.messages),function(array,index){return _c('div',{key:index + 'D',staticClass:\"array\"},_vm._l((array),function(message,index){return _c('div',{key:index + 'B'},_vm._l((message),function(binary,index){return _c('p',{key:index + 'C',class:[binary == 0 ? 'black' : 'yellow']},[_vm._v(\" \"+_vm._s(binary)+\" \")])}),0)}),0)})],2)],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","const RtaMessageCharset = require(\"./rta-message-charset\").default;\n\nconst service = {};\n\nconst placeholder = RtaMessageCharset.placeholder;\n\n// Message = 48 x 28\nconst LINE_WIDTH = 48;\nconst LINE_HEIGHT = 9;\n\nconst EMPTY_ROW = [0, 0, 0, 0, 0, 0];\n\nservice.getChar = (letter, size) => {\n    var char = RtaMessageCharset[letter.toUpperCase()] || placeholder;\n    return char[size];\n};\n\nservice.getLength = (chars) => {\n    var result = {\n        lg: chars.length - 1,\n        md: chars.length - 1,\n        sm: chars.length - 1,\n    };\n\n    chars.forEach((c) => {\n        result.lg += service.getChar(c, \"lg\").width;\n        result.md += service.getChar(c, \"md\").width;\n        result.sm += service.getChar(c, \"sm\").width;\n    });\n\n    return result;\n};\n\nservice.getSize = (chars) => {\n    var msg = service.getLength(chars);\n    if (msg.lg <= LINE_WIDTH) {\n        return \"lg\";\n    }\n    if (msg.md <= LINE_WIDTH) {\n        return \"md\";\n    }\n    return \"sm\";\n};\n\nservice.getMeta = (chars, size) => {\n    var max_height = 0;\n\n    chars.forEach((c) => {\n        var height = service.getChar(c, size).data.length;\n\n        if (max_height < height) {\n            max_height = height;\n        }\n    });\n\n    return {\n        max_height: max_height,\n    };\n};\n\nservice.encode = (message) => {\n    message = message || \"\";\n    console.log(message, \"<-- encoding message\");\n    var chars = message.split(\"\");\n    var size = service.getSize(chars);\n    var max_height = service.getMeta(chars, size).max_height;\n\n    var OUTPUT = [];\n\n    // OFFSET TOP\n    var offset_top = LINE_HEIGHT - max_height;\n\n    for (var ii = 0; ii < offset_top; ii++) {\n        OUTPUT = OUTPUT.concat(EMPTY_ROW);\n    }\n\n    // PADDING LEFT\n    var message_length = service.getLength(chars)[size];\n    var offset_left = Math.floor((LINE_WIDTH - message_length) / 2);\n    var padding_left = [];\n\n    for (var iii = 0; iii < offset_left; iii++) {\n        padding_left.push(0);\n    }\n\n    // Extract Data foreach character\n    var msg = [];\n\n    chars.forEach((c) => {\n        var res = service.getChar(c, size);\n        var width = res.width;\n        var data = res.data;\n        var char = [];\n        var padding_top = max_height - data.length;\n\n        for (var i = 0; i < padding_top; i++) {\n            char = char.concat([EMPTY_ROW.slice(0, width)]);\n        }\n\n        char = char.concat(data);\n\n        msg.push(char);\n    });\n\n    console.log(msg);\n\n    // Encode - row by row\n    for (var lh = 0; lh < max_height; lh++) {\n        var row = [];\n\n        row = row.concat(padding_left);\n\n        msg.forEach((m) => {\n            row = row.concat(m[lh]);\n            row.push(0); // spacing\n        });\n\n        row.pop(); // remove last spacing in the row\n\n        var MSG = [];\n\n        for (var i = 0; i < row.length; i += 8) {\n            var buffer = 0;\n\n            for (var j = 0; j < 8; j++) {\n                buffer = buffer | (row[i + j] << j);\n            }\n\n            MSG.push(buffer);\n        }\n\n        MSG = MSG.concat(EMPTY_ROW).slice(0, 6);\n        OUTPUT = OUTPUT.concat(MSG);\n    }\n\n    return OUTPUT;\n};\n\nservice.decode = (array) => {\n    var step = LINE_WIDTH / 8;\n    var buffer = [];\n\n    for (var i = 0; i < array.length; i += step) {\n        var row = [];\n\n        for (var col = 0; col < step; col++) {\n            for (var pixelPos = 0; pixelPos < 8; pixelPos++) {\n                row.push((array[i + col] >> pixelPos) & 1);\n            }\n        }\n\n        buffer.push(row);\n    }\n    console.log(buffer, \"1s and 0s i think\");\n\n    var count = 0;\n\n    var frameShape = [];\n\n    for (var ii = 0; ii < buffer.length; ii++) {\n        if (buffer[ii].includes(1)) {\n            frameShape.push(1);\n        } else {\n            frameShape.push(0);\n        }\n    }\n\n    console.log(frameShape, \"Frame Shape \");\n\n    var lineBorders = [];\n    var lineCount = 1;\n\n    for (var FrameShapeIndex = 0; FrameShapeIndex < frameShape.length; FrameShapeIndex++) {\n        // grabs and stores the index of the start of the line\n        if (frameShape[FrameShapeIndex] == 0 && frameShape[FrameShapeIndex + 1] == 1) {\n            lineBorders.push({ index: FrameShapeIndex + 1, lineCount: lineCount });\n        }\n\n        // grabs and stores  the index of the end of the line\n\n        if (frameShape[FrameShapeIndex] == 1 && frameShape[FrameShapeIndex + 1] == 0) {\n            lineBorders.push({ index: FrameShapeIndex, lineCount: lineCount });\n            lineCount++;\n        }\n    }\n    console.log(lineBorders, \"Indices array\");\n\n    ////////////////////////////////////////////////////////////////\n\n    var message = {};\n\n    // let difference = rowIndices[1].index - rowIndices[0].index;\n\n    // for each of the values in lineBorders which represent the vertical start and end of each line of text\n    for (var z = 0; z < lineBorders.length; z += 2) {\n        // create an array for each line in message obj (incrementing by 2 as each two values represents a line)\n        message[`line${lineBorders[z].lineCount}`] = [];\n        for (var x = lineBorders[z].index; x <= lineBorders[z + 1].index; x++) {\n            // then fill the array with the arrays from buffer that lay between the two indices defined for that line in lineBorders\n            message[`line${lineBorders[z].lineCount}`].push(buffer[x]);\n        }\n    }\n\n    // should end up with message object having an entry for each line that contains the arrays that define the text on that line\n\n    console.log(message, \"Message Obj - contains line array(s) which contain all rows with message\");\n    var lineShapes = {};\n\n    // for each line of text on the board (contained within message obj)\n    for (var h = 1; h <= Object.keys(message).length; h++) {\n        // create an entry in line shapes whos value is an empty array\n        lineShapes[`line${h}Shape`] = [];\n        for (var j = 0; j < 48; j++) {\n            // for each value in the binary arrays first create a temporary array\n            var colShape = [];\n            // for each array that makes up the line push all the values of current index into the temporary array\n            message[`line${h}`].forEach((array) => {\n                colShape.push(array[j]);\n            });\n\n            // check that temporary array to see if it includes a 1 or doesnt and then record that result with a 1 or 0 in the respective entry in line Shapes Obj\n            if (colShape.includes(1)) {\n                lineShapes[`line${h}Shape`].push(1);\n            } else {\n                lineShapes[`line${h}Shape`].push(0);\n            }\n        }\n    }\n    console.log(lineShapes, \"line shapes obj\");\n\n    var letterBorders = {};\n    // for each line shape value which is an array mapping the start and end of each letter\n\n    for (var u = 1; u <= Object.keys(lineShapes).length; u++) {\n        letterBorders[`line${u}`] = [];\n        // for each value of the array containing the shape for that line\n        for (var y = 0; y < lineShapes[`line${u}Shape`].length; y++) {\n            // if the value succeeding the current value of 0 is 1 push in the value of the succeeding index\n            if (lineShapes[`line${u}Shape`][y] == 0 && lineShapes[`line${u}Shape`][y + 1] == 1) {\n                letterBorders[`line${u}`].push(y + 1);\n            }\n\n            // if the value succeeding the current value of 1 is 0 push in the value of the current index\n            if (lineShapes[`line${u}Shape`][y] == 1 && lineShapes[`line${u}Shape`][y + 1] == 0) {\n                letterBorders[`line${u}`].push(y);\n            }\n        }\n        // col indices\n    }\n    console.log(letterBorders, \"letter Borders \");\n    var words = {};\n\n    for (var t = 1; t <= Object.keys(letterBorders).length; t++) {\n        words[`line${t}`] = [];\n        for (var s = 0; s < letterBorders[`line${t}`].length; s += 2) {\n            var letterCode = [];\n\n            message[`line${t}`].forEach((arrayZZZ) => {\n                var tempArray = [];\n                for (var q = letterBorders[`line${t}`][s]; q <= letterBorders[`line${t}`][s + 1]; q++) {\n                    tempArray.push(arrayZZZ[q]);\n                }\n\n                letterCode.push(tempArray);\n            });\n            words[`line${t}`].push(letterCode);\n        }\n    }\n\n    console.log(words, \"wooorrrdds\");\n\n    for (var c = 1; c <= Object.keys(words).length; c++) {\n        // if word is medium\n\n        let large = false;\n        words[`line${c}`].forEach((item) => {\n            if (item[0].length == 5) {\n                large = true;\n            }\n        });\n\n        if (large) {\n            words[`line${c}`].forEach((letter, outerIndex) => {\n                // if this letter only has arrays with length of 3\n                if (letter[0].length == 3) {\n                    // replace that array with an array starting with a 0;\n                    letter.forEach((innerArray, index) => {\n                        words[`line${c}`][outerIndex][index] = [0, ...innerArray, 0];\n                    });\n                }\n            });\n        }\n\n        if (words[`line${c}`][0][0].length < 5) {\n            if (words[`line${c}`][0].length == 7) {\n                // for each of the letters\n                words[`line${c}`].forEach((letter, outerIndex) => {\n                    console.log(letter, letter[0].length, \"letterArrays\");\n                    // if this letter only has arrays with length of 3\n                    if (letter[0].length == 3) {\n                        // replace that array with an array starting with a 0;\n                        letter.forEach((innerArray, index) => {\n                            words[`line${c}`][outerIndex][index] = [0, ...innerArray];\n                            console.log(words[`line${c}`][outerIndex][index], \"Inneritem\");\n                        });\n                    }\n                });\n            }\n        }\n    }\n\n    console.log(words, \"fixed words??\");\n\n    const letterMatch = (array, size) => {\n        console.log(\"using letter match\");\n        let wordArray = [];\n        array.forEach((letter) => {\n            for (var key in RtaMessageCharset) {\n                if (JSON.stringify(RtaMessageCharset[key.toString()][size].data) === JSON.stringify(letter)) {\n                    console.log(key.toString(), \"found a match this is the letter \");\n                    if (key == \"0\") {\n                        wordArray.push(\"O\");\n                    } else {\n                        wordArray.push(key.toString());\n                    }\n                    return;\n                }\n            }\n        });\n        return wordArray;\n    };\n\n    var DecodedArray = {};\n\n    for (var e = 1; e <= Object.keys(words).length; e++) {\n        var size = \"\";\n\n        words[`line${e}`][0][0].length == 5\n            ? (size = \"lg\")\n            : words[`line${e}`][0][0].length == 4\n            ? (size = \"md\")\n            : (size = \"sm\");\n\n        console.log(size);\n        DecodedArray[`line${e}`] = letterMatch(words[`line${e}`], size);\n        DecodedArray[`line${e}`] = DecodedArray[`line${e}`].join(\"\");\n    }\n\n    console.log(DecodedArray, \"decoded in array form\");\n\n    // var firstWordDecoded = firstWordDecodedArray.join(\"\");\n\n    // console.log(firstWordDecoded, \"decoded in string form\");\n    console.log(count, \"count??\");\n    return { words: DecodedArray, array: buffer };\n};\n\nexport default service;\n","<template>\n    <div id=\"app\">\n        <h1>Decoding Function Showcase</h1>\n        <h3 style=\"margin-bottom: 50px\">Type a word in each box, hit validate and then decode to see the output</h3>\n        <div style=\"margin-bottom: 10px\" v-for=\"(frame, index) in composition.frames\" :key=\"index\">\n            <input v-model=\"frame.line1\" />\n\n            <input v-model=\"frame.line2\" />\n\n            <input v-model=\"frame.line3\" />\n        </div>\n\n        <button style=\"margin-top: 50px\" @click=\"addFrame()\">Add frame</button>\n        <button @click=\"removeFrame()\">Remove frame</button>\n        <button class=\"validate\" @click=\"validate()\">Validate</button>\n\n        <!-- <pre>\n    {{composition}}\n    </pre> -->\n\n        <button class=\"decode\" @click=\"decode()\">Decode</button>\n\n        <div class=\"container\">\n            <div class=\"words-container\">\n                <p\n                    v-for=\"(word, index) in words\"\n                    :key=\"index + 'A'\"\n                    class=\"word\"\n                    :class=\"[(index + 1) % 3 == 0 ? 'word-margin' : '']\"\n                >\n                    {{ word }}\n                </p>\n            </div>\n\n            <h3>Arrays that were decoded</h3>\n            <div class=\"array\" v-for=\"(array, index) in messages\" :key=\"index + 'D'\">\n                <div v-for=\"(message, index) in array\" :key=\"index + 'B'\">\n                    <p\n                        v-for=\"(binary, index) in message\"\n                        :key=\"index + 'C'\"\n                        :class=\"[binary == 0 ? 'black' : 'yellow']\"\n                    >\n                        {{ binary }}\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport RtaMessageTransformer from \"./rta-message-transformer\";\n\nconst ImageBuffer = function () {\n    var length = 48 * 28;\n    return new Array(length / 8).fill(0);\n};\n\nexport default {\n    name: \"App\",\n\n    methods: {\n        validate() {\n            let frames = this.composition.frames;\n\n            for (var i = 0; i < frames.length; i++) {\n                var data1 = RtaMessageTransformer.encode(frames[i].line1);\n                var data2 = RtaMessageTransformer.encode(frames[i].line2);\n                var data3 = RtaMessageTransformer.encode(frames[i].line3);\n                var emptyRow = new Array(6).fill(0);\n\n                frames[i].image = data1.concat(data2).concat(data3).concat(emptyRow);\n\n                console.log(frames[i].image, \"frames I thing in validate function\");\n            }\n        },\n        addFrame() {\n            this.composition.frames.push({\n                image: new ImageBuffer(),\n                buffer: new ImageBuffer(),\n                color: \"amber\",\n                line1: \"\",\n                line2: \"\",\n                line3: \"\",\n                duration: 20,\n            });\n        },\n        removeFrame() {\n            this.composition.frames.pop();\n        },\n        decode() {\n            console.log(this.frames);\n            this.words = [];\n            this.messages = [];\n\n            for (var message of this.composition.frames) {\n                this.decoded = RtaMessageTransformer.decode(message.image);\n                for (var line in this.decoded.words) {\n                    this.words.push(this.decoded.words[line]);\n                }\n                this.messages.push(this.decoded.array);\n                console.log(this.decoded, \"decoded\");\n            }\n        },\n    },\n\n    data() {\n        return {\n            words: [],\n            messages: [],\n            composition: {\n                raw: true,\n                frames: [\n                    {\n                        image: new ImageBuffer(),\n                        buffer: new ImageBuffer(),\n                        color: \"amber\",\n                        line1: \"\",\n                        line2: \"\",\n                        line3: \"\",\n                        duration: 20,\n                    },\n                ],\n            },\n            decoded: {},\n            // testImage: [\n            //     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 200, 1, 0, 0, 0, 128, 136, 0, 0, 0, 0, 128, 136, 0, 0, 0, 0,\n            //     128, 143, 0, 0, 0, 0, 128, 136, 0, 0, 0, 0, 128, 136, 0, 0, 0, 0, 128, 200, 1, 0, 0, 0, 0, 0, 0, 0, 0,\n            //     0, 0, 0, 0, 0, 0, 0, 190, 232, 123, 62, 0, 0, 136, 40, 136, 2, 0, 0, 136, 40, 136, 2, 0, 0, 136, 239,\n            //     120, 14, 0, 0, 136, 40, 40, 2, 0, 0, 136, 40, 72, 2, 0, 0, 136, 232, 139, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            //     0, 0, 0, 0, 0, 128, 200, 113, 0, 0, 0, 128, 136, 136, 0, 0, 0, 128, 136, 8, 0, 0, 0, 128, 136, 8, 0, 0,\n            //     0, 128, 136, 8, 0, 0, 0, 0, 133, 136, 0, 0, 0, 0, 194, 113, 0, 0, 0, 0, 0, 0, 0, 0,\n            // ],\n        };\n    },\n};\n</script>\n\n<style>\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n    display: block;\n}\nbody {\n    line-height: 1;\n}\nol,\nul {\n    list-style: none;\n}\nblockquote,\nq {\n    quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n    content: \"\";\n    content: none;\n}\ntable {\n    border-collapse: collapse;\n    border-spacing: 0;\n}\n\nhtml {\n    overflow: none;\n}\nh1,\nh3 {\n    color: white;\n    font-family: Arial, Helvetica, sans-serif;\n}\n\nh1 {\n    font-size: 42px;\n}\nh3 {\n    font-size: 24px;\n    margin-top: 20px;\n}\nbutton {\n    margin-right: 20px;\n    color: white;\n\n    border: none;\n    border-radius: 3px;\n    font-size: 24px;\n    font-weight: bold;\n    padding-left: 25px;\n    padding-right: 25px;\n    padding-top: 15px;\n    padding-bottom: 15px;\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n    cursor: pointer;\n    background-color: rgb(250, 142, 0);\n}\n\nbutton:active {\n    box-shadow: none;\n    transform: scale(0.99);\n}\n#app {\n    min-height: 100vh;\n    overflow-x: none;\n    padding: 50px;\n    background: linear-gradient(#2c3e50, #4ca1af);\n}\n\n#app input {\n    padding: 10px;\n    margin-right: 8px;\n}\n\n.container {\n    background-color: rgba(0, 0, 0, 0.5);\n    color: orange;\n    padding: 20px;\n    min-height: 350px;\n    margin-top: 50px;\n    font-family: Arial, Helvetica, sans-serif;\n    display: flex;\n    flex-flow: column nowrap;\n    align-items: center;\n}\n\n.container h3 {\n    margin-bottom: 20px;\n}\n\n.words-container {\n    display: flex;\n}\n\n.word {\n    margin-right: 5px;\n}\n\n.yellow {\n    color: rgb(255, 230, 0);\n    display: inline-block;\n    margin-left: 10px;\n}\n.black {\n    color: rgb(26, 25, 25);\n    display: inline-block;\n    margin-left: 10px;\n}\n\n.word-margin {\n    margin-right: 20px;\n}\n\n.array {\n    margin-bottom: 50px;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=500242e9&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n"],"sourceRoot":""}